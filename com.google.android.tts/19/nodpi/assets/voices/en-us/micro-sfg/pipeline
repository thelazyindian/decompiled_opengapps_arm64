stream {
  name: "input"
  classname: "CopyStream"
}
stream {
  name: "rewrite_simple"
  classname: "RewriteStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      rewrite_algo_ref: "rewrite_algo"
    }
  }
}
stream {
  name: "tokenize_and_classify_kestrel"
  classname: "TokenizeAndClassifyGrmStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      phonology_ref: "phonology"
      tokenize_and_classify_grm_algo_ref: "tokenize_and_classify_grm_algo"
    }
  }
}
stream {
  name: "classify_roman_numerals_kestrel"
  classname: "ClassifyRomanNumeralsGrmStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      classify_roman_numerals_grm_algo_ref: "classify_roman_numerals_grm_algo"
    }
  }
}
stream {
  name: "token_resolver"
  classname: "TokenResolverStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      resolve_token_homographs_algo_ref: "token_resolver_algo"
    }
  }
}
stream {
  name: "lseq_classifier"
  classname: "LseqClassifierStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      lseq_classifier_algo_ref: "lseq_classifier_algo"
    }
  }
}
stream {
  name: "verbalize_kestrel"
  classname: "VerbalizeGrmStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      verbalize_grm_algo_ref: "verbalize_grm_algo"
    }
  }
}
stream {
  name: "word_resolver"
  classname: "WordResolverStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      resolve_homographs_simple_algo_ref: "word_resolver_algo"
    }
  }
}
stream {
  name: "basic_affix_pronounce"
  classname: "BasicAffixPronounceStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      grm_far_ref: "compound_pronounce_grm_fst"
      phonology_ref: "phonology"
      lexicon_ref: "combined_lexicon"
      basic_homographs_ref: "disambiguation_rules"
      engine_config_ref: "engine_config"
      cross_lingual_lexicons_ref: "cross_lingual_lexicons"
      learned_fst_g2p_mapper_ref: "learned_fst_g2p_mapper"
      affix_word_splitter_ref: "affix_word_splitter"
    }
  }
}
stream {
  name: "select_variants"
  classname: "SelectVariantsStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      select_variants_algo_ref: "select_variants_algo"
    }
  }
}
stream {
  name: "lstm_synthesizer"
  classname: "LstmSynthesizerStream"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      add_specification_ref: "lstm_add_specification_resource"
      lstm_dur_model_ref: "lstm_dur_model"
      lstm_speech_model_ref: "lstm_speech_model"
      vocoding_ref: "vocoding_resource"
      parametric_playback_spec_ref: "parametric_playback_spec"
    }
  }
}
stream {
  name: "utterance_to_audio_event"
  classname: "UtteranceToEventStream"
  params {
    [speech.tts.UtteranceToEventParams.id] {
      event_type: TTS_EVENT_AUDIO_FINISHED
    }
  }
}
stream {
  name: "controller_events"
  classname: "CopyStream"
}
connect {
  from: "input"
  to: "rewrite_simple"
}
connect {
  from: "rewrite_simple"
  to: "tokenize_and_classify_kestrel"
}
connect {
  from: "tokenize_and_classify_kestrel"
  to: "classify_roman_numerals_kestrel"
}
connect {
  from: "classify_roman_numerals_kestrel"
  to: "token_resolver"
}
connect {
  from: "token_resolver"
  to: "lseq_classifier"
}
connect {
  from: "lseq_classifier"
  to: "verbalize_kestrel"
}
connect {
  from: "verbalize_kestrel"
  to: "word_resolver"
}
connect {
  from: "word_resolver"
  to: "basic_affix_pronounce"
}
connect {
  from: "basic_affix_pronounce"
  to: "select_variants"
}
connect {
  from: "select_variants"
  to: "lstm_synthesizer"
}
connect {
  from: "lstm_synthesizer"
  to: "utterance_to_audio_event"
}
connect {
  from: "utterance_to_audio_event"
  to: "controller_events"
}
resource {
  name: "engine_config"
  classname: "EngineConfig"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "engine_config_en_us_sfg_android_parametric_synthesis_embedded.pb"
      type: FILE
    }
  }
}
resource {
  name: "acoustic_frame_config"
  classname: "AcousticFrameConfig"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "mcep25win1_bap5win1_lf01win1_voicing1win1.pb"
      type: FILE
    }
  }
}
resource {
  name: "vocoding_resource"
  classname: "Vocoding"
  params {
    [speech.tts.VocodingResourceParams.id] {
      acoustic_frame_config_ref: "acoustic_frame_config"
      morphing_palette {
        path: "speech_morphing_palette.pb"
        type: FILE
      }
      engine_config_ref: "engine_config"
    }
  }
}
resource {
  name: "voice_params"
  classname: "VoiceParams"
  params {
    [speech.tts.VoiceParams.id] {
      description: "Blaze-generated greco_micro_lstm voice for en_us (speaker sfg; sample rate 16000; size android)"
      language: "en"
      region: "us"
      speaker: "sfg"
      gender: "female"
      quality: "normal"
      sample_rate: 16000
      server_voice_name: "sfg-micro"
      supports_set_sample_rate: true
      multi_speaker: false
    }
  }
}
resource {
  name: "phonology"
  classname: "Phonology"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "phonology.pb"
      type: FILE
    }
  }
}
resource {
  name: "utf8_utils"
  classname: "Utf8UtilsResource"
  params {
    [speech.tts.Utf8UtilsResourceParams.id] {
      phonology_ref: "phonology"
    }
  }
}
resource {
  name: "tokenize_and_classify_grm_fst"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      fst_names: "TOKENIZE_AND_CLASSIFY"
      data_source {
        path: "../sfg/tokenize_and_classify_embedded_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "combined_lexicon"
  classname: "LexiconResource"
  params {
    [speech.tts.LexiconResourceParams.id] {
      data_source {
        path: "../sfg/compressed_lexicon_en_us.blex"
        type: FILE
      }
      phonology_ref: "phonology"
    }
  }
}
resource {
  name: "tokenize_and_classify_grm_algo"
  classname: "TokenizeAndClassifyGrm"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      grm_far_ref: "tokenize_and_classify_grm_fst"
      phonology_ref: "phonology"
      lexicon_ref: "combined_lexicon"
      utf8_utils_ref: "utf8_utils"
      engine_config_ref: "engine_config"
    }
  }
}
resource {
  name: "verbalize_grm_fst"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      fst_names: "ALL"
      data_source {
        path: "../sfg/verbalize_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "classification_model"
  classname: "ClassificationModel"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "../sfg/en_us.embedded.model.pb"
      type: FILE
    }
  }
}
resource {
  name: "universal_phonology"
  classname: "Phonology"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "phonology.params"
      type: FILE
    }
  }
}
resource {
  name: "variant_overrides"
  classname: "VariantOverridesResource"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "variant_overrides_us.pb"
      type: FILE
    }
  }
}
resource {
  name: "serialization_spec"
  classname: "SerializeSpec"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "../sfg/en_verbalize_spec.pb"
      type: FILE
    }
  }
}
resource {
  name: "classify_roman_numerals_grm_fst"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      fst_names: "ROMAN_NUMERAL"
      fst_names: "MORPHOSYNTACTIC_FEATURES"
      data_source {
        path: "roman_numeral_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "roman_numeral_context_words"
  classname: "RomanNumeralContextWords"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "roman_numeral_contexts.pb"
      type: FILE
    }
  }
}
resource {
  name: "rewrite_grm_fst"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      fst_names: "REWRITE"
      data_source {
        path: "rewrite_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "lstm_speech_model"
  classname: "PortableLstmPredictSpeechParamsResource"
  params {
    [speech.tts.LstmModelResourceParams.id] {
      acoustic_frame_config_ref: "acoustic_frame_config"
      frame_position_code_length: 3
      engine_config_ref: "engine_config"
      nn_config: "lstm_speech_model_en_us_sfg_android_16000_micro_phoneme_nn_mcep_cmp.nn_config"
      input_mean_std_dev {
        path: "lstm_speech_model_en_us_sfg_android_16000_micro_phoneme_nn_mcep_cmp.input_mean_std_dev"
        type: FILE
      }
      output_mean_std_dev {
        path: "lstm_speech_model_en_us_sfg_android_16000_micro_phoneme_nn_mcep_cmp.output_mean_std_dev"
        type: FILE
      }
    }
  }
}
resource {
  name: "lstm_dur_model"
  classname: "PortableLstmPredictDurationsResource"
  params {
    [speech.tts.LstmModelResourceParams.id] {
      acoustic_frame_config_ref: "acoustic_frame_config"
      frame_position_code_length: 0
      engine_config_ref: "engine_config"
      nn_config: "lstm_dur_model_en_us_sfg_android_16000_micro_phoneme_nn_mcep_cmp.nn_config"
      input_mean_std_dev {
        path: "lstm_dur_model_en_us_sfg_android_16000_micro_phoneme_nn_mcep_cmp.input_mean_std_dev"
        type: FILE
      }
      output_mean_std_dev {
        path: "lstm_dur_model_en_us_sfg_android_16000_micro_phoneme_nn_mcep_cmp.output_mean_std_dev"
        type: FILE
      }
    }
  }
}
resource {
  name: "parametric_playback_spec"
  classname: "ParametricPlaybackSpec"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "../sfg/resource.pb"
      type: FILE
    }
  }
}
resource {
  name: "lstm_add_specification_resource"
  classname: "AddSpecificationResource"
  params {
    [speech.tts.AddSpecificationResourceParams.id] {
      phonology_ref: "phonology"
      data_source {
        path: "micro_phoneme_lstm.params"
      }
      feature_set_type: REGULAR
      specification_type: PARAMETRIC_SYNTHESIS
      universal_phonology_ref: "universal_phonology"
    }
  }
}
resource {
  name: "lseq_classifier_model"
  classname: "CompactRankerModel"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "lseq_compact_model_farm32.pb"
      type: FILE
    }
  }
}
resource {
  name: "lseq_classifier_grammar"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      fst_names: "ABSTRACTIFY"
      data_source {
        path: "feats_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "learned_fst_g2p_mapper"
  classname: "LearnedFstG2pMapper"
  params {
    [speech.tts.LearnedFstG2pMapperResourceParams.id] {
      ref {
        phonology_ref: "phonology"
      }
      fst_g2p_data_source {
        path: "../sfg/g2p_m3_syls0_stress0_en-US.fst"
        type: FILE
      }
    }
  }
}
resource {
  name: "homograph_mapping_grammar"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      data_source {
        path: "mapping_grammar_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "disambiguation_rules"
  classname: "DisambiguationRulesResource"
  params {
    [speech.tts.DataSourceParams.id] {
      path: "disambiguation_rules_us.pb"
      type: FILE
    }
  }
}
resource {
  name: "compound_pronounce_grm_fst"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      data_source {
        path: "pronounce_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "affix_word_splitter_grm"
  classname: "GrmManager"
  params {
    [speech.tts.GrmFarResourceParams.id] {
      data_source {
        path: "affixes_android.far"
        type: FILE
      }
    }
  }
}
resource {
  name: "affix_word_splitter"
  classname: "AffixWordSplitter"
  params {
    [speech.tts.AffixWordSplitterResourceParams.id] {
      affixes_data_source {
        path: "affixes_params.pb"
        type: FILE
      }
      ref {
        affix_word_splitter_grm_ref: "affix_word_splitter_grm"
      }
    }
  }
}
resource {
  name: "lseq_classifier_algo"
  classname: "LseqClassifier"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      grm_far_ref: "lseq_classifier_grammar"
      phonology_ref: "phonology"
      lexicon_ref: "combined_lexicon"
      compact_ranker_model_ref: "lseq_classifier_model"
    }
  }
}
resource {
  name: "select_variants_algo"
  classname: "SelectVariants"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      lexicon_ref: "combined_lexicon"
      classification_model_ref: "classification_model"
      variant_overrides_ref: "variant_overrides"
    }
  }
}
resource {
  name: "verbalize_grm_algo"
  classname: "VerbalizeGrm"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      grm_far_ref: "verbalize_grm_fst"
      phonology_ref: "phonology"
      lexicon_ref: "combined_lexicon"
      engine_config_ref: "engine_config"
      serialization_spec_ref: "serialization_spec"
    }
  }
}
resource {
  name: "word_resolver_algo"
  classname: "WordResolver"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      basic_homographs_ref: "disambiguation_rules"
      utf8_utils_ref: "utf8_utils"
      engine_config_ref: "engine_config"
    }
  }
}
resource {
  name: "token_resolver_algo"
  classname: "TokenResolver"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      grm_far_ref: "homograph_mapping_grammar"
      basic_homographs_ref: "disambiguation_rules"
      utf8_utils_ref: "utf8_utils"
    }
  }
}
resource {
  name: "rewrite_algo"
  classname: "Rewrite"
  params {
    [speech.tts.RewriteResourceParams.id] {
      ref {
        grm_far_ref: "rewrite_grm_fst"
        engine_config_ref: "engine_config"
      }
      regexp_rewrites_file {
        path: "regexp_rewrite.pb"
        type: FILE
      }
      default_normalizations_file {
        path: "../sfg/default_normalizations.pb"
        type: FILE
      }
      language_specific_normalizations_file {
        path: "normalization_overrides.pb"
        type: FILE
      }
    }
  }
}
resource {
  name: "classify_roman_numerals_grm_algo"
  classname: "ClassifyRomanNumerals"
  params {
    [speech.tts.ResourceReferenceParams.id] {
      grm_far_ref: "classify_roman_numerals_grm_fst"
      roman_numeral_context_words_ref: "roman_numeral_context_words"
    }
  }
}
